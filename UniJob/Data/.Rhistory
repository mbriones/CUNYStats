select = c(Degree, CurrentSalary, YearGrad))
Huntersalaryyear2 <- Huntersalaryyear %>% group_by(Degree, YearGrad) %>% summarize(Average = mean(CurrentSalary))
Huntersalaryyearplot <- ggplot(Huntersalaryyear2, aes(x = YearGrad,  y= Average)) + geom_line(aes(color=Degree)) + scale_y_continuous(labels = comma) + xlab("Year Graduated") + ylab("Average Salary") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(color = "black"))
Huntersalaryyearplot
knitr::kable(topcompanyQueensCS)
knitr::kable(topcompanyQueensEN)
knitr::kable(topskillsQueensCS)
knitr::kable(topskillsQueensEN)
CUNYMerge$Job <- ifelse((grepl("Developer", CUNYMerge$JobTitle)| grepl("developer", CUNYMerge$JobTitle)),"Developer",
ifelse((grepl("QA", CUNYMerge$JobTitle)==T | grepl("QA", CUNYMerge$JobTitle)==T),"QA",
ifelse((grepl("Engineer", CUNYMerge$JobTitle) | grepl("engineer", CUNYMerge$JobTitle)), "Engineer",
ifelse((grepl("Analyst", CUNYMerge$JobTitle)==T | grepl("analyst", CUNYMerge$JobTitle)==T),"Analyst",
ifelse((grepl("IT", CUNYMerge$JobTitle)==T | grepl("IT", CUNYMerge$JobTitle)==T),"IT Support",
ifelse((grepl("Operations", CUNYMerge$JobTitle)==T | grepl("operations", CUNYMerge$JobTitle)==T),"Operations",
ifelse(grepl("Programmer", CUNYMerge$JobTitle)|  grepl("programmer", CUNYMerge$JobTitle), "Programmer",
ifelse(grepl("Technician", CUNYMerge$JobTitle), "Technician",
ifelse(grepl("Teacher", CUNYMerge$JobTitle), "Teacher",
ifelse(grepl("Tutor", CUNYMerge$JobTitle), "Tutor",
ifelse(grepl("teacher", CUNYMerge$JobTitle), "Teacher",
ifelse(grepl("student", CUNYMerge$JobTitle) |  grepl("Student", CUNYMerge$JobTitle), "Graduate Student",
ifelse (grepl("PhD", CUNYMerge$JobTitle) |  grepl("phd", CUNYMerge$JobTitle), "Graduate Student",
ifelse(grepl("lecturer", CUNYMerge$JobTitle) | grepl("Lecturer", CUNYMerge$JobTitle), "Lecturer",
ifelse(grepl("Postdoctoral", CUNYMerge$JobTitle), "Postdoc",
ifelse(grepl("Professor", CUNYMerge$JobTitle) |  grepl("professor", CUNYMerge$JobTitle), "Professor",
ifelse(grepl("Teaching", CUNYMerge$JobTitle), "Adjunct Lecturer",
ifelse(grepl("Research", CUNYMerge$JobTitle), "Researcher",
ifelse(grepl("Adjunct", CUNYMerge$JobTitle), "Adjunct Lecturer",
ifelse(grepl("Fellow", CUNYMerge$JobTitle), "Fellowship",
ifelse(grepl("Sales", CUNYMerge$JobTitle), "Sales Associate",
ifelse(grepl("Business", CUNYMerge$JobTitle), "Business Associate",
ifelse(grepl("Associate", CUNYMerge$JobTitle), "Associate",
ifelse (grepl("Administrator", CUNYMerge$JobTitle), "Administrator",
ifelse(grepl("Administrative", CUNYMerge$JobTitle),  "Administrative Assistant",
ifelse(grepl("Recruitment", CUNYMerge$JobTitle), "Recruiter",
ifelse(grepl("Recruiter", CUNYMerge$JobTitle), "Recruiter",
ifelse(grepl("Assistant", CUNYMerge$JobTitle), "Administrative Assistant",
ifelse(grepl("Director", CUNYMerge$JobTitle), "Director",
ifelse(grepl("Manager", CUNYMerge$JobTitle), "Manager",
ifelse(grepl("manager", CUNYMerge$JobTitle), "Manager",
ifelse(grepl("Intern", CUNYMerge$JobTitle)| grepl("intern", CUNYMerge$JobTitle), "Intern",
ifelse((grepl("Writer", CUNYMerge$JobTitle)| (grepl("writer", CUNYMerge$JobTitle))), "Writer",
ifelse(grepl("Data", CUNYMerge$JobTitle), "Data Scientist",
ifelse(grepl("Chief Technology", CUNYMerge$JobTitle), "CTO",
ifelse(grepl("Consultant", CUNYMerge$JobTitle), "Consulting",
ifelse(grepl("Psychologist", CUNYMerge$JobTitle), "Psychologist",
ifelse(grepl("Librarian", CUNYMerge$JobTitle), "Librarian",
ifelse(grepl("Graphic", CUNYMerge$JobTitle), "Graphic Designer",
ifelse(grepl("Social Worker", CUNYMerge$JobTitle), "Social Worker",
ifelse(grepl("Programming", CUNYMerge$JobTitle), "Programmer",
ifelse(grepl("Bioinformatics", CUNYMerge$JobTitle), "Statistician",
ifelse(grepl("Doctoral", CUNYMerge$JobTitle), "Graduate Student",
ifelse(grepl("Development", CUNYMerge$JobTitle), "Developer",
ifelse(grepl("Education", CUNYMerge$JobTitle), "Teacher",
ifelse(grepl("Principal", CUNYMerge$JobTitle), "Principal",
ifelse(grepl("Legal", CUNYMerge$JobTitle), "Paralegal",
ifelse(grepl("Lawyer", CUNYMerge$JobTitle), "Laywer",
ifelse(grepl("Attorney", CUNYMerge$JobTitle), "Lawyer",
"Other")))))))))))))))))))))))))))))))))))))))))))))))))
CUNYMerge$JobSector <- ifelse(CUNYMerge$Job == "Writer", "Writing",
ifelse(CUNYMerge$Job == "Technician", "Tech",
ifelse(CUNYMerge$Job == "Teacher", "Education",
ifelse(CUNYMerge$Job == "Statistician", "Tech",
ifelse(CUNYMerge$Job == "Social Worker", "Health",
ifelse(CUNYMerge$Job == "Sales Associate", "Service",
ifelse(CUNYMerge$Job == "Researcher", "Research",
ifelse(CUNYMerge$Job == "Recruiter", "HR",
ifelse(CUNYMerge$Job == "QA", "Tech",
ifelse(CUNYMerge$Job == "Psychologist", "Health",
ifelse(CUNYMerge$Job == "Programmer", "Tech",
ifelse(CUNYMerge$Job == "Professor", "University",
ifelse(CUNYMerge$Job == "Principal", "Education",
ifelse(CUNYMerge$Job == "PostDoc", "University",
ifelse(CUNYMerge$Job == "Paralegal", "Legal",
ifelse(CUNYMerge$Job == "Operations", "HR",
ifelse(CUNYMerge$Job == "Manager", "HR",
ifelse(CUNYMerge$Job == "Librarian", "Library",
ifelse(CUNYMerge$Job == "Lecturer", "University",
ifelse(CUNYMerge$Job == "Lawyer", "Legal",
ifelse(CUNYMerge$Job == "IT Support", "Tech",
ifelse(CUNYMerge$Job == "Intern", "Intern",
ifelse(CUNYMerge$Job == "Graphic Design", "Design",
ifelse(CUNYMerge$Job == "Graduate Student", "University",
ifelse(CUNYMerge$Job == "Fellowship", "University",
ifelse(CUNYMerge$Job == "Engineer", "Tech",
ifelse(CUNYMerge$Job == "Director", "Administration",
ifelse(CUNYMerge$Job == "Developer", "Tech",
ifelse(CUNYMerge$Job == "Data Scientist", "Tech",
ifelse(CUNYMerge$Job == "CTO", "Tech",
ifelse(CUNYMerge$Job == "Consulting", "Services",
ifelse(CUNYMerge$Job == "Associate", "Business",
ifelse(CUNYMerge$Job == "Business Associate", "Business",
ifelse(CUNYMerge$Job == "Analyst", "Tech",
ifelse(CUNYMerge$Job == "Administrator", "Administration",
ifelse(CUNYMerge$Job == "Administrative Assistant", "Administration",
ifelse(CUNYMerge$Job == "Adjunct Lecturer", "University", "Other")))))))))))))))))))))))))))))))))))))
CUNYMerge$CurrentSalary <- ifelse(CUNYMerge$Job == "Adjunct Lecturer", 35000,
ifelse(CUNYMerge$Job == "Administrative Assistant", 46000,
ifelse(CUNYMerge$Job == "Administrator", 51000,
ifelse(CUNYMerge$Job == "Analyst", 77000,
ifelse(CUNYMerge$Job == "Business Associate", 65000,
ifelse(CUNYMerge$Job == "Consultant", 80000,
ifelse(CUNYMerge$Job == "CTO", 150000,
ifelse(CUNYMerge$Job == "Data Scientist", 120000,
ifelse(CUNYMerge$Job == "Developer", 90000,
ifelse(CUNYMerge$Job == "Director", 137000,
ifelse(CUNYMerge$Job == "Engineer", 100000,
ifelse(CUNYMerge$Job == "Graduate Student", 30000,
ifelse(CUNYMerge$Job == "Graphic Designer", 65000,
ifelse(CUNYMerge$Job == "Intern", 10000,
ifelse(CUNYMerge$Job == "IT Support", 65000,
ifelse(CUNYMerge$Job == "Lawyer", 140000,
ifelse(CUNYMerge$Job == "Lecturer", 85000,
ifelse(CUNYMerge$Job == "Librarian", 62000,
ifelse(CUNYMerge$Job == "Manager", 61000,
ifelse(CUNYMerge$Job == "Operations", 93000,
ifelse(CUNYMerge$Job == "Paralegal", 53000,
ifelse(CUNYMerge$Job == "Postdoc", 43000,
ifelse(CUNYMerge$Job == "Principal", 103000,
ifelse(CUNYMerge$Job == "Professor", 110000,
ifelse(CUNYMerge$Job == "Programmer", 90000,
ifelse(CUNYMerge$Job == "Psychologist", 74000,
ifelse(CUNYMerge$Job == "QA", 64000,
ifelse(CUNYMerge$Job == "Recruiter", 48000,
ifelse(CUNYMerge$Job == "Researcher", 65000,
ifelse(CUNYMerge$Job == "Sales Associate", 20000,
ifelse(CUNYMerge$Job == "Social Worker", 44000,
ifelse(CUNYMerge$Job == "Statistician", 80000,
ifelse(CUNYMerge$Job == "Teacher", 50000,
ifelse(CUNYMerge$Job == "Technician", 45000,
ifelse(CUNYMerge$Job == "Tutor", 30000,
ifelse(CUNYMerge$Job == "Writer", 60000, "Unknown"))))))))))))))))))))))))))))))))))))
setwd("~/Desktop/ByteflowProjects/QueensLinkedIn/UniJobPrediction/Data")
cunylinkedinnew <- CUNYMerge[!grepl("Unknown", CUNYMerge$CurrentSalary),]
write.csv(cunylinkedinnew, "cunylinkedinnew.csv")
library(flexdashboard)
library(shiny)
library(ggplot2)
library(tidyverse)
library(leaflet)
library(maps)
library(scales)
library(sp)
library(rgdal)
library(maptools)
library(httr)
library(broom)
library(ggmap)
cuny <- read.csv("Data/cunylinkedinnew.csv")
topcompanyQueensCS <- read.csv("Data/topcompanyQueensCS.csv")
topcompanyQueensEN <- read.csv("Data/topcompanyQueensEN.csv")
topsectorQueensCS <- read.csv("Data/topsectorQueensCS.csv")
topsectorQueensEN <- read.csv("Data/topsectorQueensEN.csv")
topskillsQueensCS <- read.csv("Data/topskillsQueensCS.csv")
topskillsQueensEN <- read.csv("Data/topskillsQueensEN.csv")
queenscompany <- subset(cuny, select = c(JobSector, DegreeSector))
queenscompanyplot <-ggplot(queenscompany, aes(JobSector)) + geom_bar(aes(fill=DegreeSector), position = "dodge", color = "black") + xlab("Job Sector") + ylab("Number of Students") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(color = "black"))
queenscompanyplot
queensCS <- subset(cuny, Degree == "Computer Science",
select = c(School, JobSector))
queensCSplot <-ggplot(queensCS, aes(JobSector)) + geom_bar(aes(fill=School), position = "dodge", color="black") + xlab("Job Sector") + ylab("Number of Students") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
queensCSplot
queensEN <- subset(cuny, Degree == "English", select = c(School, JobSector))
queensENplot <-ggplot(queensEN, aes(JobSector)) + geom_bar(aes(fill=School), position = "dodge", color="black") + xlab("Job Sector") + ylab("Number of Students") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
queensENplot
Queenssalaryyear <- subset(cuny, School == "Queens College",
select = c(Degree, CurrentSalary, YearGrad))
Queenssalaryyear2 <- Queenssalaryyear %>% group_by(Degree, YearGrad) %>% summarize(Average = mean(CurrentSalary))
Queenssalaryyearplot <- ggplot(Queenssalaryyear2, aes(x = YearGrad,  y= Average)) + geom_line(aes(color=Degree)) + scale_y_continuous(labels = comma) + xlab("Year Graduated") + ylab("Average Salary") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(color = "black"))
Queenssalaryyearplot
Huntersalaryyear <- subset(cuny, School == "Hunter College",
select = c(Degree, CurrentSalary, YearGrad))
Huntersalaryyear2 <- Huntersalaryyear %>% group_by(Degree, YearGrad) %>% summarize(Average = mean(CurrentSalary))
Huntersalaryyearplot <- ggplot(Huntersalaryyear2, aes(x = YearGrad,  y= Average)) + geom_line(aes(color=Degree)) + scale_y_continuous(labels = comma) + xlab("Year Graduated") + ylab("Average Salary") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(color = "black"))
Huntersalaryyearplot
knitr::kable(topcompanyQueensCS)
knitr::kable(topcompanyQueensEN)
knitr::kable(topskillsQueensCS)
knitr::kable(topskillsQueensEN)
library(flexdashboard)
library(shiny)
library(ggplot2)
library(tidyverse)
library(leaflet)
library(maps)
library(scales)
library(sp)
library(rgdal)
library(maptools)
library(httr)
library(broom)
library(ggmap)
cuny <- read.csv("Data/cunylinkedinnew.csv")
topcompanyQueensCS <- read.csv("Data/topcompanyQueensCS.csv")
topcompanyQueensCS[c("X")] <- list(NULL)
topcompanyQueensCS <- subset(topcompanyQueensCS, select=c(Company, Count))
colnames(topcompanyQueensCS) <- c("Company", "Number of Graduates")
topcompanyQueensEN <- read.csv("Data/topcompanyQueensEN.csv")
topcompanyQueensEN[c("X")] <- list(NULL)
topcompanyQueensEN <- subset(topcompanyQueensEN, select=c(Company, Count))
colnames(topcompanyQueensEN) <- c("Company", "Number of Graduates")
topskillsQueensCS <- read.csv("Data/topskillsQueensCS.csv")
topskillsQueensCS[c("X")] <- list(NULL)
topskillsQueensCS <- subset(topskillsQueensCS, select=c(Skills, Count))
colnames(topskillsQueensCS) <- c("Skills", "Number of Graduates")
topskillsQueensEN <- read.csv("Data/topskillsQueensEN.csv")
topskillsQueensEN[c("X")] <- list(NULL)
topskillsQueensEN <- subset(topskillsQueensEN, select=c(Skills, Count))
colnames(topskillsQueensEN) <- c("Skills", "Number of Graduates")
queenscompany <- subset(cuny, School == "Queens College", select = c(JobSector, DegreeSector))
queenscompanyplot <-ggplot(queenscompany, aes(JobSector)) + geom_bar(aes(fill=DegreeSector), position = "dodge", color = "black") + xlab("Job Sector") + ylab("Number of Students") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(color = "black"))
queenscompanyplot
queensCS <- subset(cuny, Degree == "Computer Science" & School == "Queens College",
select = c(JobSector))
queensCSplot <-ggplot(queensCS, aes(JobSector)) + geom_bar(aes(fill=JobSector), color="black") + xlab("Job Sector") + ylab("Number of Students") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
queensCSplot
queensCS <- subset(cuny, Degree == "Computer Science" & School == "Queens College",
select = c(JobSector))
queensCSplot <-ggplot(queensCS, aes(JobSector)) + geom_bar(aes(fill=JobSector), color="black", show.legend = F) + xlab("Job Sector") + ylab("Number of Students") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
queensCSplot
queensEN <- subset(cuny, Degree == "English" & School == "Queens College", select = c(JobSector))
queensENplot <-ggplot(queensEN, aes(JobSector)) + geom_bar(aes(fill=JobSector), color="black", show.legend = F) + xlab("Job Sector") + ylab("Number of Students") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
queensENplot
Queenssalaryyear <- subset(cuny, School == "Queens College",
select = c(Degree, CurrentSalary, YearGrad))
Queenssalaryyear2 <- Queenssalaryyear %>% group_by(Degree, YearGrad) %>% summarize(Average = mean(CurrentSalary))
Queenssalaryyearplot <- ggplot(Queenssalaryyear2, aes(x = YearGrad,  y= Average)) + geom_line(aes(color=Degree)) + scale_y_continuous(labels = comma) + scale_x_continuous(breaks=YearGrad) + xlab("Year Graduated") + ylab("Average Salary") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(color = "black"))
Queenssalaryyear <- subset(cuny, School == "Queens College",
select = c(Degree, CurrentSalary, YearGrad))
Queenssalaryyear2 <- Queenssalaryyear %>% group_by(Degree, YearGrad) %>% summarize(Average = mean(CurrentSalary))
Queenssalaryyearplot <- ggplot(Queenssalaryyear2, aes(x = YearGrad,  y= Average)) + geom_line(aes(color=Degree)) + scale_y_continuous(labels = comma) + scale_x_continuous() + xlab("Year Graduated") + ylab("Average Salary") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),vpanel.background = element_blank(), axis.line = element_line(color = "black"))
Queenssalaryyear <- subset(cuny, School == "Queens College",
select = c(Degree, CurrentSalary, YearGrad))
Queenssalaryyear2 <- Queenssalaryyear %>% group_by(Degree, YearGrad) %>% summarize(Average = mean(CurrentSalary))
Queenssalaryyearplot <- ggplot(Queenssalaryyear2, aes(x = YearGrad,  y= Average)) + geom_line(aes(color=Degree)) + scale_y_continuous(labels = comma) + scale_x_continuous() + xlab("Year Graduated") + ylab("Average Salary") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
Queenssalaryyearplot
Queenssalaryyear <- subset(cuny, School == "Queens College",
select = c(Degree, CurrentSalary, YearGrad))
Queenssalaryyear2 <- Queenssalaryyear %>% group_by(Degree, YearGrad) %>% summarize(Average = mean(CurrentSalary))
Queenssalaryyearplot <- ggplot(Queenssalaryyear2, aes(x = YearGrad,  y= Average)) + geom_line(aes(color=Degree)) + scale_y_continuous(labels = comma) + scale_x_continuous(labels = YearGrad) + xlab("Year Graduated") + ylab("Average Salary") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
Queenssalaryyear <- subset(cuny, School == "Queens College",
select = c(Degree, CurrentSalary, YearGrad))
Queenssalaryyear2 <- Queenssalaryyear %>% group_by(Degree, YearGrad) %>% summarize(Average = mean(CurrentSalary))
Queenssalaryyearplot <- ggplot(Queenssalaryyear2, aes(x = YearGrad,  y= Average)) + geom_line(aes(color=Degree)) + scale_y_continuous(labels = comma) + scale_x_continuous(labels = Queenssalaryyear2$YearGrad) + xlab("Year Graduated") + ylab("Average Salary") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
Queenssalaryyearplot
Queenssalaryyear <- subset(cuny, School == "Queens College",
select = c(Degree, CurrentSalary, YearGrad))
Queenssalaryyear2 <- Queenssalaryyear %>% group_by(Degree, YearGrad) %>% summarize(Average = mean(CurrentSalary))
Queenssalaryyearplot <- ggplot(Queenssalaryyear2, aes(x = YearGrad,  y= Average)) + geom_line(aes(color=Degree)) + scale_y_continuous(labels = comma) + scale_x_continuous(breaks = Queenssalaryyear2$YearGrad) + xlab("Year Graduated") + ylab("Average Salary") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
Queenssalaryyearplot
ueenssalaryyear <- subset(cuny, School == "Queens College",
select = c(Degree, CurrentSalary, YearGrad))
Queenssalaryyear2 <- Queenssalaryyear %>% group_by(Degree, YearGrad) %>% summarize(Average = mean(CurrentSalary))
Queenssalaryyearplot <- ggplot(Queenssalaryyear2, aes(x = YearGrad,  y= Average)) + geom_line(aes(color=Degree)) + geom_point(data = Queenssalaryyear2, aes(x = YearGrad,  y= Average)) + scale_y_continuous(labels = comma) + scale_x_continuous(breaks = Queenssalaryyear2$YearGrad) + xlab("Year Graduated") + ylab("Average Salary") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
Queenssalaryyearplot
Queenssalaryyear <- subset(cuny, School == "Queens College",
select = c(Degree, CurrentSalary, YearGrad))
Queenssalaryyear2 <- Queenssalaryyear %>% group_by(Degree, YearGrad) %>% summarize(Average = mean(CurrentSalary))
Queenssalaryyearplot <- ggplot(Queenssalaryyear2, aes(x = YearGrad,  y= Average)) + geom_line(aes(color=Degree)) + geom_point(data = Queenssalaryyear2, aes(x = YearGrad,  y= Average)) + geom_text(aes(label=Average),hjust=0, vjust=0) + scale_y_continuous(labels = comma) + scale_x_continuous(breaks = Queenssalaryyear2$YearGrad) + xlab("Year Graduated") + ylab("Average Salary") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
Queenssalaryyearplot
install.packages("plotly")
View(CUNYMerge)
View(cunylinkedin)
View(cunylinkedinnew)
OtherJobs <- subset(CUNYMerge, Job == "Other", select = JobTitle)
View(OtherJobs)
library(flexdashboard)
library(shiny)
library(ggplot2)
library(plotly)
library(plyr)
library(tidyverse)
library(leaflet)
library(maps)
library(scales)
library(sp)
library(rgdal)
library(maptools)
library(httr)
library(broom)
library(ggmap)
cuny <- read.csv("Data/cunylinkedinnew.csv")
topcompanyQueensCS <- read.csv("Data/topcompanyQueensCS.csv")
topcompanyQueensCS[c("X")] <- list(NULL)
topcompanyQueensCS <- subset(topcompanyQueensCS, select=c(Company, Count))
colnames(topcompanyQueensCS) <- c("Company", "Number of Graduates")
topcompanyQueensEN <- read.csv("Data/topcompanyQueensEN.csv")
topcompanyQueensEN[c("X")] <- list(NULL)
topcompanyQueensEN <- subset(topcompanyQueensEN, select=c(Company, Count))
colnames(topcompanyQueensEN) <- c("Company", "Number of Graduates")
topskillsQueensCS <- read.csv("Data/topskillsQueensCS.csv")
topskillsQueensCS[c("X")] <- list(NULL)
topskillsQueensCS <- subset(topskillsQueensCS, select=c(Skills, Count))
colnames(topskillsQueensCS) <- c("Skills", "Number of Graduates")
topskillsQueensEN <- read.csv("Data/topskillsQueensEN.csv")
topskillsQueensEN[c("X")] <- list(NULL)
topskillsQueensEN <- subset(topskillsQueensEN, select=c(Skills, Count))
colnames(topskillsQueensEN) <- c("Skills", "Number of Graduates")
bp<- ggplot(topskillsQueensCS, aes(x="", y=`Number of Graduates`, fill=Skills))+
geom_bar(width = 1, stat = "identity")
bp
bp<- ggplot(topskillsQueensCS, aes(x="", y=`Number of Graduates`, fill=Skills))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
pie
bp<- ggplot(topskillsQueensCS, aes(x="", y=`Number of Graduates`, fill=Skills))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = `Number of Graduates`/15 + c(0, cumsum(`Number of Graduates`)[-length(`Number of Graduates`)]), label = percent(`Number of Graduates`/100)), size=5)
bp<- ggplot(topskillsQueensCS, aes(x="", y=`Number of Graduates`, fill=Skills))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
pie + scale_fill_grey()
bp<- ggplot(topskillsQueensCS, aes(x=Skills, y=`Number of Graduates`, fill="grey"))+
geom_bar(width = 1, stat = "identity")
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
bp +  blank_theme + theme(axis.text.x=element_blank())
topskillsCS <-ggplot(topskillsQueensCS, aes(Skills)) + geom_bar(color="black") + coord_flip() + xlab("Skill") + ylab("Number of Graduates") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
topskillsCS
topskillsCS <-ggplot(topskillsQueensCS, aes(x = Skills, y = `Number of Graduates`)) + geom_bar(color="black") + coord_flip() + xlab("Skill") + ylab("Number of Graduates") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
topskillsCS
topskillsCS <-ggplot(topskillsQueensCS, aes(x = Skills, y = `Number of Graduates`), stat = "identity") + geom_bar(color="black") + coord_flip() + xlab("Skill") + ylab("Number of Graduates") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
topskillsCS
topskillsCS <-ggplot(topskillsQueensCS, aes(x = Skills, y = `Number of Graduates`)) + geom_col(color="black") + coord_flip() + xlab("Skill") + ylab("Number of Graduates") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
topskillsCS
View(topcompanyQueensCS)
View(topskillsCS)
View(topskillsHunterEN)
View(topskillsQueensCS)
as.numeric(topskillsQueensCS$`Number of Graduates`)
topskillsQueensCS$`Number of Graduates`<-as.numeric(as.character(topskillsQueensCS$`Number of Graduates`))
topskillsQueensCS$`Number of Graduates`<-as.character(topskillsQueensCS$`Number of Graduates`)
View(topskillsQueensCS)
topskillsQueensCS$`Number of Graduates` <- gsub(",", "", topskillsQueensCS$`Number of Graduates`)
View(topskillsQueensCS)
View(topskillsQueensEN)
View(topskillsQueensCS)
setwd("~/Desktop/ByteflowProjects/QueensLinkedIn/UniJobPrediction/Data")
topskillsQueensCS <- read.csv("topskillsQueensCS.csv")
View(topskillsQueensCS)
topskillsQueensCS$`Number of Graduates` <- gsub(",", "", topskillsQueensCS$`Number of Graduates`)
View(topskillsQueensEN)
View(topskillsQueensCS)
topskillsQueensCS$Count <- gsub(",", "", topskillsQueensCS$Count)
topskillsQueensCS$Count<-as.numeric(as.character(topskillsQueensCS$Count))
topskillsQueensCS$Count<-as.numeric(as.character(topskillsQueensCS$Count))
topskillsQueensCS$Count<-as.character(topskillsQueensCS$Count)
topskillsQueensCS <- read.csv("topskillsQueensCS.csv")
topskillsQueensCS$Count <- gsub(",", "", topskillsQueensCS$Count)
topskillsQueensCS$Count<-as.character(topskillsQueensCS$Count)
View(topskillsQueensEN)
View(topskillsHunterEN)
View(topskillsQueensCS)
topskillsQueensCS$Count<-as.numeric(topskillsQueensCS$Count)
View(topskillsQueensEN)
View(topskillsQueensCS)
cuny <- read.csv("Data/cunylinkedinnew.csv")
topcompanyQueensCS <- read.csv("Data/topcompanyQueensCS.csv")
topcompanyQueensCS[c("X")] <- list(NULL)
topcompanyQueensCS <- subset(topcompanyQueensCS, select=c(Company, Count))
colnames(topcompanyQueensCS) <- c("Company", "Number of Graduates")
topcompanyQueensEN <- read.csv("Data/topcompanyQueensEN.csv")
topcompanyQueensEN[c("X")] <- list(NULL)
topcompanyQueensEN <- subset(topcompanyQueensEN, select=c(Company, Count))
colnames(topcompanyQueensEN) <- c("Company", "Number of Graduates")
topskillsQueensCS <- read.csv("Data/topskillsQueensCS.csv")
topskillsQueensCS[c("X")] <- list(NULL)
topskillsQueensCS <- subset(topskillsQueensCS, select=c(Skills, Count))
colnames(topskillsQueensCS) <- c("Skills", "Number of Graduates")
topskillsQueensEN <- read.csv("Data/topskillsQueensEN.csv")
topskillsQueensEN[c("X")] <- list(NULL)
topskillsQueensEN <- subset(topskillsQueensEN, select=c(Skills, Count))
colnames(topskillsQueensEN) <- c("Skills", "Number of Graduates")
topskillsQueensCS$`Number of Graduates` <- gsub(",", "", topskillsQueensCS$`Number of Graduates`)
topskillsQueensCS$`Number of Graduates`<-as.character(topskillsQueensCS$`Number of Graduates`)
topskillsQueensCS$`Number of Graduates`<-as.numeric(topskillsQueensCS$`Number of Graduates`)
topskillsCS <-ggplot(topskillsQueensCS, aes(Skills,`Number of Graduates`)) + geom_col(color="grey") + coord_flip() + xlab("Skill") + ylab("Number of Graduates") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
ggplotly(topskillsCS)
topskillsCS
View(CUNYMerge)
View(cunylinkedinnew)
install.packages("wordcloud")
library(wordcloud)
install.packages("RColorBrewer")
library(wordcloud)
wordcloud(cunylinkedinnew$Job, random.order = F)
library(flexdashboard)
library(shiny)
library(ggplot2)
library(plotly)
library(plyr)
library(tidyverse)
library(leaflet)
library(maps)
library(scales)
library(sp)
library(rgdal)
library(maptools)
library(httr)
library(broom)
library(ggmap)
library(wordcloud)
cuny <- read.csv("Data/cunylinkedinnew.csv")
topcompanyQueensCS <- read.csv("Data/topcompanyQueensCS.csv")
topcompanyQueensCS[c("X")] <- list(NULL)
topcompanyQueensCS <- subset(topcompanyQueensCS, select=c(Company, Count))
colnames(topcompanyQueensCS) <- c("Company", "Number of Graduates")
topcompanyQueensEN <- read.csv("Data/topcompanyQueensEN.csv")
topcompanyQueensEN[c("X")] <- list(NULL)
topcompanyQueensEN <- subset(topcompanyQueensEN, select=c(Company, Count))
colnames(topcompanyQueensEN) <- c("Company", "Number of Graduates")
topskillsQueensCS <- read.csv("Data/topskillsQueensCS.csv")
topskillsQueensCS[c("X")] <- list(NULL)
topskillsQueensCS <- subset(topskillsQueensCS, select=c(Skills, Count))
colnames(topskillsQueensCS) <- c("Skills", "Number of Graduates")
topskillsQueensEN <- read.csv("Data/topskillsQueensEN.csv")
topskillsQueensEN[c("X")] <- list(NULL)
topskillsQueensEN <- subset(topskillsQueensEN, select=c(Skills, Count))
colnames(topskillsQueensEN) <- c("Skills", "Number of Graduates")
cunywordsCS <- subset(cuny, Degree == "Computer Science" & School == "Queens College", select = c(School, Job))
wordcloud(cunywordsCS$Job, random.order = F)
View(Huntersalaryyear2)
View(topcompanyHunterEN)
setwd("~/Desktop/ByteflowProjects/QueensLinkedIn/UniJobPrediction/Data")
write.csv(topcompanyHunterCS, "topcompanyHunterCS.csv")
write.csv(topskillsHunterCS, "topskillsHunterCS.csv")
write.csv(topcompanyHunterEN, "topcompanyHunterEN.csv")
write.csv(topskillsHunterEN, "topskillsHunterEN.csv")
library(flexdashboard)
library(shiny)
library(ggplot2)
library(tidyverse)
library(leaflet)
library(maps)
library(scales)
library(sp)
library(rgdal)
library(maptools)
library(httr)
library(broom)
library(ggmap)
cuny <- read.csv("Data/cunylinkedinnew.csv")
topcompanyQueensCS <- read.csv("Data/topcompanyQueensCS.csv")
topcompanyQueensCS[c("X")] <- list(NULL)
topcompanyQueensCS <- subset(topcompanyQueensCS, select=c(Company, Count))
colnames(topcompanyQueensCS) <- c("Company", "Number of Graduates")
topcompanyQueensEN <- read.csv("Data/topcompanyQueensEN.csv")
topcompanyQueensEN[c("X")] <- list(NULL)
topcompanyQueensEN <- subset(topcompanyQueensEN, select=c(Company, Count))
colnames(topcompanyQueensEN) <- c("Company", "Number of Graduates")
topskillsQueensCS <- read.csv("Data/topskillsQueensCS.csv")
topskillsQueensCS[c("X")] <- list(NULL)
topskillsQueensCS <- subset(topskillsQueensCS, select=c(Skills, Count))
colnames(topskillsQueensCS) <- c("Skills", "Number of Graduates")
topskillsQueensEN <- read.csv("Data/topskillsQueensEN.csv")
topskillsQueensEN[c("X")] <- list(NULL)
topskillsQueensEN <- subset(topskillsQueensEN, select=c(Skills, Count))
colnames(topskillsQueensEN) <- c("Skills", "Number of Graduates")
topcompanyHunterCS <- read.csv("Data/topcompanyHunterCS.csv")
topcompanyHunterCS[c("X")] <- list(NULL)
topcompanyHunterCS <- subset(topcompanyHunterCS, select=c(Company, Count))
colnames(topcompanyHunterCS) <- c("Company", "Number of Graduates")
topcompanyHunterEN <- read.csv("Data/topcompanyHunterEN.csv")
topcompanyHunterEN[c("X")] <- list(NULL)
topcompanyHunterEN <- subset(topcompanyHunterEN, select=c(Company, Count))
colnames(topcompanyHunterEN) <- c("Company", "Number of Graduates")
topskillsHunterCS <- read.csv("Data/topskillsHunterCS.csv")
topskillsHunterCS[c("X")] <- list(NULL)
topskillsHunterCS <- subset(topskillsHunterCS, select=c(Skills, Count))
colnames(topskillsHunterCS) <- c("Skills", "Number of Graduates")
topskillsHunterEN <- read.csv("Data/topskillsHunterEN.csv")
topskillsHunterEN[c("X")] <- list(NULL)
topskillsHunterEN <- subset(topskillsHunterEN, select=c(Skills, Count))
colnames(topskillsHunterEN) <- c("Skills", "Number of Graduates")
cunycompany <- subset(cuny, select = c(JobSector, School, Degree))
cunycompanyplot <-ggplot(cunycompany, aes(JobSector)) + geom_bar(aes(fill=School, color = Degree), position = "dodge", color = "black") + xlab("Job Sector") + ylab("Number of Students") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(color = "black"))
cunycompanyplot
cunyCS <- subset(cuny, Degree == "Computer Science",
select = c(School, JobSector))
cunyCSplot <-ggplot(cunyCS, aes(JobSector)) + geom_bar(aes(fill=School), color="black", show.legend = F) + xlab("Job Sector") + ylab("Number of Students") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black"))
cunyCSplot
